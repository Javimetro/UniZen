import"./style-geIAKcW7.js";const R=document.getElementById("monthYear"),I=document.getElementById("prevMonth"),T=document.getElementById("nextMonth"),b=document.querySelector(".days");let f=new Date,c=f.getMonth(),u=f.getFullYear(),p;const $=["January","February","March","April","May","June","July","August","September","October","November","December"];document.addEventListener("DOMContentLoaded",async function(){E(),j()});document.getElementById("allTimeButton").addEventListener("click",_);document.getElementById("monthlyButton").addEventListener("click",()=>x(c,u));I.addEventListener("click",N);T.addEventListener("click",H);window.onload=()=>{x(c,u)};const L=document.getElementById("logoutBtn");L.addEventListener("click",B);async function j(){const e=localStorage.getItem("token"),t=await fetch("/api/measurements/user-data",{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const r=await t.json(),n=parseFloat(r.results[r.results.length-1].result.readiness);console.log("Last readiness:",n);let a;if(n>=66){const o=["Congratulations on maintaining exceptional readiness levels! Your consistent effort and dedication are truly commendable. Remember to sustain this momentum and continue prioritizing self-care. Regular exercise, balanced nutrition, and sufficient rest are vital components of your success journey. Keep up the outstanding work!","Your readiness metrics indicate outstanding performance, reflecting your commitment to peak physical and mental preparedness. Embrace the day with confidence and vigor, knowing that your resilience and determination equip you to tackle any challenge. Stay focused on your goals, maintain a positive mindset, and seize every opportunity for growth.","Exemplary readiness levels demonstrate your unwavering commitment to personal excellence. Your disciplined approach to training and recovery sets a benchmark for success. As you embark on your daily endeavors, leverage your high readiness to maximize productivity and achieve optimal outcomes. Remember to listen to your body's cues and adapt your routine accordingly."];a=o[Math.floor(Math.random()*o.length)]}else if(n>=33){const o=["While your readiness metrics suggest satisfactory performance, it's crucial to prioritize holistic well-being. Balancing intensity with adequate rest is essential for sustaining long-term progress. Incorporate active recovery techniques, such as stretching or yoga, into your routine to enhance flexibility and reduce the risk of injury. Remember, consistency and moderation are key to optimizing your readiness levels.","Maintaining moderate readiness levels signifies a solid foundation for progress and growth. Take this opportunity to reassess your training regimen and identify areas for improvement. Implement strategies to optimize recovery, such as mindfulness practices or relaxation techniques, to mitigate stress and enhance overall resilience. Remember to celebrate small victories along your journey towards peak performance.","Your readiness metrics indicate a balanced approach to training and recovery. While there's room for improvement, your consistent efforts contribute to incremental progress. Focus on refining your skills and techniques, leveraging each training session as an opportunity for growth. Prioritize quality rest and nutrition to support your body's adaptive processes. With dedication and perseverance, you'll continue to elevate your readiness levels."];a=o[Math.floor(Math.random()*o.length)]}else{const o=["Low readiness levels serve as a valuable indicator of the need for rest and rejuvenation. Recognize the importance of listening to your body's signals and honoring its need for recovery. Prioritize ample sleep, hydration, and nutrition to facilitate optimal healing and regeneration. Consider incorporating low-impact activities, such as walking or gentle stretching, to promote circulation and alleviate muscular tension.","Acknowledging low readiness levels is an essential step towards preventing burnout and injury. Embrace this opportunity to recalibrate your training approach and implement a phased recovery plan. Focus on activities that promote relaxation and stress reduction, such as meditation or deep breathing exercises. Remember, self-care is a fundamental aspect of sustainable performance and overall well-being.","Low readiness levels signal a temporary setback in your training journey, but they also present an opportunity for reflection and growth. Take this time to assess your current routine and identify factors contributing to fatigue or overexertion. Consider consulting with a coach or healthcare professional to develop a personalized recovery strategy. Remember, progress is not linear, and setbacks are natural occurrences in the pursuit of excellence."];a=o[Math.floor(Math.random()*o.length)]}document.getElementById("tipText").textContent=a}async function A(){try{const e=u,t=c+1;await F(e,t)}catch(e){console.error("Error fetching health data:",e)}}async function F(e,t){const r=localStorage.getItem("token"),n=await fetch(`/api/calendar/month/${e}/${String(t).padStart(2,"0")}`,{headers:{Authorization:`Bearer ${r}`}});if(!n.ok){console.error("Failed to fetch health data:",n.status);return}const a=await n.json();if(!a||a.length===0){console.log("No health data available for this month");return}const o=new Date(e,t-1,1).getDay(),s=document.querySelectorAll(".day");for(const i of a){const d=new Date(i.Date).getDate(),l=s[d+o-1];if(l){const y=parseFloat(i.avg_readiness);let m;y>=66?m="green":y>=33?m="yellow":m="red",l.style.backgroundColor=m,l.addEventListener("click",()=>{})}}}async function E(){const e=32-new Date(u,c,32).getDate(),t=new Date(u,c,1).getDay();R.textContent=`${$[c]} ${u}`,b.textContent="";for(let n=0;n<t;n++){const a=document.createElement("div");a.classList.add("day"),b.appendChild(a)}for(let n=1;n<=e;n++){const a=document.createElement("div");a.classList.add("day"),a.textContent=n,b.appendChild(a),a.addEventListener("click",async()=>{const o=`${u}-${String(c+1).padStart(2,"0")}-${String(n).padStart(2,"0")}`,s=await z(o),i=document.getElementById("healthData");i.textContent="";const h=document.createElement("button");if(h.textContent="i",h.id="infoButton",i.appendChild(h),document.getElementById("infoButton").addEventListener("click",()=>{Swal.fire({title:"Measurement Explanation",html:`
        <p>Mean HR BPM: The average heart rate in beats per minute.</p>
        <p>Readiness: A percentage indicating the readiness of the body for physical activity.</p>
        <p>Mean RR MS: The average of RR intervals in milliseconds.</p>
        <p>RMSSD MS: The root mean square of successive differences in RR intervals in milliseconds.</p>
        <p>SDNN MS: The standard deviation of NN intervals in milliseconds.</p>
      `,icon:"info",confirmButtonText:"Close"})}),s.length>0){const l=document.createElement("strong");l.textContent=`Health data for ${o}:`,i.appendChild(l);const y=document.createElement("p");y.textContent=`Mean HR BPM: ${Math.round(s[0].result.mean_hr_bpm)} BPM`,i.appendChild(y);const m=document.createElement("p");m.textContent=`Readiness: ${Math.round(s[0].result.readiness)} %`,i.appendChild(m);const M=document.createElement("p");M.textContent=`Mean RR MS: ${Math.round(s[0].result.mean_rr_ms)} MS`,i.appendChild(M);const C=document.createElement("p");C.textContent=`RMSSD MS: ${Math.round(s[0].result.rmssd_ms)} MS`,i.appendChild(C);const k=document.createElement("p");k.textContent=`SDNN MS: ${Math.round(s[0].result.sdnn_ms)} MS`,i.appendChild(k);const w=document.createElement("p");let v="";const D=Math.round(s[0].result.readiness);D<33?v="ðŸ˜ž":D>=33&&D<66?v="ðŸ™‚":v="ðŸ˜ƒ",w.className="emoji",w.textContent=`${v}`,i.appendChild(w)}else{const l=document.createElement("p");l.textContent=`No health data for ${o}`,i.appendChild(l)}let d;readiness>=66?d="green":readiness>=33?d="yellow":d="red",a.style.backgroundColor=d})}await A();const r=document.getElementById("healthData");r.textContent="Please click a date for specific info"}async function z(e){const t=localStorage.getItem("token"),r=await fetch("/api/measurements/user-data",{headers:{Authorization:`Bearer ${t}`}});if(!r.ok){console.error("Failed to fetch health data:",r.status);return}return(await r.json()).results.filter(o=>new Date(o.daily_result).toISOString().split("T")[0]===e)}function N(){c--,c<0&&(c=11,u--),E()}function H(){c++,c>11&&(c=0,u++),E()}async function _(){try{const e=localStorage.getItem("token"),t=await fetch("/api/measurements/user-data",{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const r=await t.json(),n=r.results.map(s=>parseFloat(s.result.readiness).toFixed(2)),a=r.results.map(s=>`Date: ${new Date(s.daily_result).toLocaleDateString()}`),o=document.getElementById("readinessChart").getContext("2d");p&&p.destroy(),p=new Chart(o,{type:"line",data:{labels:a,datasets:[{label:"Readiness",data:n,fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]},options:{responsive:!0,scales:{y:{beginAtZero:!0}}}})}catch(e){console.error("Error fetching readiness data:",e)}}async function x(e,t){try{const r=localStorage.getItem("token"),n=await fetch("/api/measurements/user-data",{headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"}});if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const o=(await n.json()).results.filter(d=>{const l=new Date(d.daily_result);return l.getMonth()===e&&l.getFullYear()===t}),s=o.map(d=>parseFloat(d.result.readiness).toFixed(2)),i=o.map(d=>`Date: ${new Date(d.daily_result).toLocaleDateString()}`),h=document.getElementById("readinessChart").getContext("2d");p&&p.destroy(),p=new Chart(h,{type:"line",data:{labels:i,datasets:[{label:"Readiness",data:s,fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]},options:{responsive:!0,scales:{y:{beginAtZero:!0}}}})}catch(r){console.error("Error fetching readiness data:",r)}}function B(e){e.preventDefault(),Swal.fire({icon:"success",title:"Logged out successfully",showConfirmButton:!1,timer:1500}).then(()=>{localStorage.removeItem("token"),localStorage.removeItem("username"),window.location.href="index.html"})}async function q(){const e=localStorage.getItem("token"),t=await fetch("/api/measurements/user-data",{headers:{Authorization:`Bearer ${e}`}});if(!t.ok){console.error("Failed to fetch user data:",t.status);return}await t.json()}q();document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("logoutBtn");e?e.addEventListener("click",B):console.error("Logout button not found")});document.getElementById("todayButton").addEventListener("click",()=>{f=new Date,c=f.getMonth(),u=f.getFullYear(),E()});const g=document.createElement("button");g.textContent="i";g.id="infoButton";g.style.position="absolute";g.style.top="10px";g.style.right="10px";const S=document.getElementById("healthData");S.style.position="relative";S.appendChild(g);document.getElementById("infoButton").addEventListener("click",()=>{alert(`
    Mean HR BPM: The average heart rate in beats per minute.
    Readiness: A percentage indicating the readiness of the body for physical activity.
    Mean RR MS: The average of RR intervals in milliseconds.
    RMSSD MS: The root mean square of successive differences in RR intervals in milliseconds.
    SDNN MS: The standard deviation of NN intervals in milliseconds.
  `)});
